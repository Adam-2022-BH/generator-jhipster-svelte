<script>
	import { onMount } from 'svelte'
	import auth from '../../components/auth/auth-store.js'
	import accountService from './../../components/account/account-service'
	import Alert from './../../components/Alert.svelte'
	import Page from '../../components/page/Page.svelte'
	import UserSettingsForm from '../../components/account/UserSettingsForm.svelte'

	let error
	let login
	let firstName
	let lastName
	let email
	let settingsUpdated = false

	onMount(() => initAccount())

	function initAccount() {
		login = $auth.login
		firstName = $auth.firstName
		lastName = $auth.lastName
		email = $auth.email
	}

	function updateAccount() {
		error = undefined
		settingsUpdated = false
		const updatedAccount = { ...$auth, firstName, lastName, email }
		accountService
			.updateAccount(updatedAccount)
			.then(() => auth.loadUser())
			.then(() => (settingsUpdated = true))
			.catch(err => (error = err))
	}
</script>

<svelte:head>
	<title>Update user settings</title>
	<meta name="Description" content="Update user settings" />
</svelte:head>

<Page testId="settings">
	<span slot="header">User settings for [{login}]</span>
	<div slot="alerts">
		<Alert
			data-test="successMsg"
			show="{settingsUpdated}"
			closeable="{false}"
		>Settings changed!</Alert
		>
		<Alert
			data-test="errorMsg"
			type="danger"
			show="{error}"
			closeable="{false}"
		>An error has occurred! The user settings could not be saved.</Alert
		>
	</div>
	<UserSettingsForm
		bind:firstName
		bind:lastName
		bind:email
		on:click="{updateAccount}"
	/>
</Page>
