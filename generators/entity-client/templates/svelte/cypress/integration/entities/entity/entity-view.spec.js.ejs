<%_
	const entityFakeData = generateFakeData('cypress');
	const containsBinaryField = fields.find(field => (field.fieldTypeBinary && !field.blobContentTypeText));
_%>
describe('<%= entityAngularName %> view details page', () => {
	let dynamicId

	before(() => {
		cy.unregisterServiceWorkers()
		cy.loginByApi(
			Cypress.env('adminUsername'),
			Cypress.env('adminPassword')
		)

<%_ if (containsBinaryField) { _%>
		cy.fixture('integration-test.png')
			.then($blob => {
				return <% } %>cy.save('api/<%= entityApiUrl %>', {
			<%_
				for (field of fields.filter(field => !field.id)) {
					const fieldValue = !entityFakeData ? field.generateFakeData('cypress') : entityFakeData[field.fieldName];
					if (fieldValue === undefined) {
						warning(`Error generating a value for field ${field.fieldName}`);
					}
			_%>
				<%_ if (field.fieldTypeBoolean) { _%>
				<%= field.fieldName %>: true,
				<%_ } else if (field.fieldTypeBinary && !field.blobContentTypeText) { _%>
				<%= field.fieldName %>: $blob,
				<%= field.fieldName %>ContentType: 'image/png',
				<%_ } else if (field.fieldTypeString || field.fieldTypeUUID) { _%>
				<%= field.fieldName %>: '<%= fieldValue %>',
				<%_ } else if (field.fieldTypeLocalDate) { _%>
				<%= field.fieldName %>: '<%= fieldValue %>' ,
				<%_ } else if (field.fieldTypeTimed) { _%>
				<%= field.fieldName %>: '<%= fieldValue %>:00.000Z' ,
				<%_ } else if (field.fieldTypeDuration) { _%>
				<%= field.fieldName %>: 'PT0.000052484S',
				<%_ } else if (field.fieldTypeNumeric) { _%>
				<%= field.fieldName %>: <%= fieldValue %>,
				<%_ } else { _%>
				<%= field.fieldName %>: '<%= fieldValue %>',
				<%_ } _%>
			<%_ } _%>
<%_ if (containsBinaryField) { _%>
			})
<%_ } _%>
		}).then(res => {
			dynamicId = res.id
		})
	})

	beforeEach(() => {
		cy.unregisterServiceWorkers()
		cy.loginByApi(
			Cypress.env('adminUsername'),
			Cypress.env('adminPassword')
		)
        cy.visit(`/entities/<%= entityFolderName %>/${dynamicId}/view`)
	})

	after(() => {
		cy.delete(`api/<%= entityApiUrl %>/${dynamicId}`)
	<%_ if (authenticationType === 'oauth2') { _%>
		cy.logoutByApi()
	<%_ } _%>
	})

    <%_ if (authenticationType === 'oauth2') { _%>
    afterEach(() => {
        cy.logoutByApi()
    })
    <%_ } _%>

	it('should display <%= entityAngularName %> details', () => {
		cy.getBySel('<%= entityInstance %>Title')
			.should('be.visible')
			.and('contain', `<%= entityClassHumanized %> Details`)

		cy.get('div.table').within(() => {
			cy.root()
				.get('.table-cell')
				.should('have.length', <%= (fields.length - 1) * 2 %>)
		})
	})

	it('should navigate back to the <%= entityAngularName %> list page', () => {
		cy.getByName('backBtn').click()
		cy.getBySel('<%= entityInstance %>Title')
			.should('be.visible')
			.should('contain', '<%= entityClassPluralHumanized %>')
	})
})
