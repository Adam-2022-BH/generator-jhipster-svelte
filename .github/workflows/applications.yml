name: Svelte Application Generator
on: [push, pull_request]
env:
    TEST_SCRIPTS_PATH: ${{ github.workspace }}/.github/workflows/scripts
jobs:
    generator-jhipster-svelte:
        runs-on: ${{ matrix.os }}
        timeout-minutes: 30
        strategy:
            fail-fast: false
            matrix:
                apps: ['monolithic-session.json', 'monolithic-session-gradle.json']
                os: [ubuntu-latest]
                node_version: [12.x]
        steps:
            - uses: actions/checkout@v2
            - name: Download latest chrome binary
              run: |
                  sudo apt-get update
                  sudo apt-get install google-chrome-stable -y
                  sudo apt-get install xvfb
            - uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node_version }}
            - name: Create Svelte Hipster docker image
              run: |
                  docker build -t jhipster/svelte-hipster:latest --build-arg UID=$(id -u) --build-arg GID=$(id -g) .
            - name: Prepare environment
              run: |
                  mkdir -p "$HOME/svelte-app"
                  mkdir -p "$HOME/.m2"
                  mkdir -p "$HOME/.gradle"
                  mkdir -p "$HOME/.cache"
            - name: Generate application
              run: |
                  cd "$HOME/svelte-app"
                  cp $TEST_SCRIPTS_PATH/${{ matrix.apps }} .yo-rc.json
                  docker run --rm -v $PWD:/app -v $HOME/.cache:/home/jhipster/.cache  jhipster/svelte-hipster --no-insight --force
            - name: Run unit tests
              if: !contains(matrix.apps , 'gradle')
              run: |
                  cd "$HOME/svelte-app"
                  docker run --rm -v $PWD:/app -v $HOME/.m2:/home/jhipster/.m2 --entrypoint ./mvnw jhipster/svelte-hipster -ntp  clean test
            - name: Run unit tests
              if: contains(matrix.apps, 'gradle')
              run: |
                  cd "$HOME/svelte-app"
                  docker run --rm -v $PWD:/app -v $HOME/.gradle:/home/jhipster/.gradle --entrypoint ./gradlew jhipster/svelte-hipster clean test --no-daemon
            - name: Package application
              if: !contains(matrix.apps , 'gradle')
              run: |
                  cd "$HOME/svelte-app"
                  docker run --rm -v $PWD:/app -v $HOME/.m2:/home/jhipster/.m2 --entrypoint ./mvnw jhipster/svelte-hipster -ntp -Pprod clean verify
            - name: Package application
              if: contains(matrix.apps, 'gradle')
              run: |
                  cd "$HOME/svelte-app"
                  docker run --rm -v $PWD:/app -v $HOME/.gradle:/home/jhipster/.gradle --entrypoint ./gradlew jhipster/svelte-hipster -Pprod clean bootJar --no-daemon
            - name: Run e2e tests
              if: !contains(matrix.apps , 'gradle')
              run: |
                  cd "$HOME/svelte-app"
                  docker run -d  --rm -v $PWD:/app -v $HOME/.m2:/home/jhipster/.m2 -p8080:8080 --entrypoint ./mvnw jhipster/svelte-hipster -DskipTests
                  timeout 180 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8080/api/authenticate)" != "200" ]]; do sleep 5; done' || false
                  npm run e2e
            - name: Run e2e tests
              if: contains(matrix.apps, 'gradle')
              run: |
                  cd "$HOME/svelte-app"
                  docker run -d  --rm -v $PWD:/app -v $HOME/.gradle:/home/jhipster/.gradle -p8080:8080 --entrypoint ./gradlew jhipster/svelte-hipster -x test
                  timeout 180 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8080/api/authenticate)" != "200" ]]; do sleep 5; done' || false
                  npm run e2e
