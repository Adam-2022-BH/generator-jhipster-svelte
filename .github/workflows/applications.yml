name: Svelte Dev Profile Applications
on:
    push:
        branches:
            - main
            - release
    pull_request:
        branches:
            - main
            - release
env:
    TEST_SCRIPTS_PATH: ${{ github.workspace }}/.github/workflows/scripts
jobs:
    generator-jhipster-svelte:
        runs-on: ${{ matrix.os }}
        timeout-minutes: 20
        strategy:
            fail-fast: false
            matrix:
                apps:
                    [
                        'monolithic-session-maven.jdl',
                        'monolithic-session-gradle.json',
                        'monolithic-jwt-maven.json',
                        'monolithic-jwt-gradle.json',
                    ]
                os: [ubuntu-latest]
                node_version: [14.x]
        steps:
            - uses: actions/checkout@v2
            - name: Download latest chrome binary
              if: contains(matrix.os , 'ubuntu-latest')
              run: |
                  sudo apt-get update
                  sudo apt-get install google-chrome-stable -y
                  sudo apt-get install xvfb
            - uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node_version }}
            - name: Gradle - Configure cache
              uses: actions/cache@v2
              if: contains(matrix.apps, 'gradle')
              with:
                  path: |
                      ~/.gradle/caches
                      ~/.gradle/wrapper
                  key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                  restore-keys: |
                      ${{ runner.os }}-gradle-
            - name: Maven - Configure cache
              uses: actions/cache@v2
              if: contains(matrix.apps, 'maven')
              with:
                  path: ~/.m2/repository
                  key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
                  restore-keys: |
                      ${{ runner.os }}-maven-
            - name: Configure cypress cache
              uses: actions/cache@v2
              with:
                  path: ~/.cache/Cypress/
                  key: ${{ runner.os }}-cypress-6.8 # Needs a better way to cache cypress binary
                  restore-keys: |
                      ${{ runner.os }}-cypress-
            - name: Create Svelte Hipster docker image
              run: |
                  docker build -t jhipster/svelte-hipster:latest --build-arg UID=$(id -u) --build-arg GID=$(id -g) .
            - name: Prepare environment
              run: |
                  mkdir -p "$HOME/svelte-app"
                  mkdir -p "$HOME/.m2"
                  mkdir -p "$HOME/.gradle"
                  mkdir -p "$HOME/.cache"
            - name: Generate application
              if: contains(matrix.apps, '.json')
              run: |
                  cd "$HOME/svelte-app"
                  cp $TEST_SCRIPTS_PATH/${{ matrix.apps }} .yo-rc.json
                  docker run --rm -v $PWD:/app -v $HOME/.cache:/home/shipster/.cache  jhipster/svelte-hipster --no-insight --force
            - name: Generate application
              if: contains(matrix.apps, '.jdl')
              run: |
                  cd "$HOME/svelte-app"
                  cp $TEST_SCRIPTS_PATH/${{ matrix.apps }} app.jdl
                  docker run --rm -v $PWD:/app -v $HOME/.cache:/home/shipster/.cache  jhipster/svelte-hipster import-jdl app.jdl --no-insight --force
            - name: Maven - Unit tests
              if: contains(matrix.apps , 'maven')
              run: |
                  cd "$HOME/svelte-app"
                  docker run --rm -v $PWD:/app -v $HOME/.m2:/home/shipster/.m2 --entrypoint ./mvnw jhipster/svelte-hipster -ntp test
            - name: Gradle - Unit tests
              if: contains(matrix.apps, 'gradle')
              run: |
                  cd "$HOME/svelte-app"
                  docker run --rm -v $PWD:/app -v $HOME/.gradle:/home/shipster/.gradle --entrypoint ./gradlew jhipster/svelte-hipster test --no-daemon
            - name: Frontend - Unit tests
              run: |
                  cd "$HOME/svelte-app"
                  docker run --rm -v $PWD:/app --entrypoint npm jhipster/svelte-hipster test -- --coverage
            - name: Maven - Package application
              if: contains(matrix.apps , 'maven')
              run: |
                  cd "$HOME/svelte-app"
                  docker run --rm -v $PWD:/app -v $HOME/.m2:/home/shipster/.m2 --entrypoint ./mvnw jhipster/svelte-hipster -ntp -Pprod package
            - name: Gradle - Package application
              if: contains(matrix.apps, 'gradle')
              run: |
                  cd "$HOME/svelte-app"
                  docker run --rm -v $PWD:/app -v $HOME/.gradle:/home/shipster/.gradle --entrypoint ./gradlew jhipster/svelte-hipster -Pprod bootJar --no-daemon
            - name: Maven - Cypress tests
              if: contains(matrix.apps , 'maven')
              run: |
                  cd "$HOME/svelte-app"
                  docker run -d  --rm -v $PWD:/app -v $HOME/.m2:/home/shipster/.m2 -p8080:8080 --entrypoint ./mvnw jhipster/svelte-hipster -DskipTests
                  timeout 180 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8080/api/authenticate)" != "200" ]]; do sleep 5; done' || false
                  npm run e2e
            - name: Gradle Cypress tests
              if: contains(matrix.apps, 'gradle')
              run: |
                  cd "$HOME/svelte-app"
                  docker run --rm -v $PWD:/app -v $HOME/.gradle:/home/shipster/.gradle --entrypoint ./gradlew jhipster/svelte-hipster clean
                  docker run -d --rm -v $PWD:/app -v $HOME/.gradle:/home/shipster/.gradle -p8080:8080 --entrypoint ./gradlew jhipster/svelte-hipster -x test
                  timeout 180 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8080/api/authenticate)" != "200" ]]; do sleep 5; done' || false
                  npm run e2e
